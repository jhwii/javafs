영속성 컨텍스트(Persistence Context)는 JPA(Java Persistence API)에서 관리하는 엔티티(Entity) 인스턴스들의 논리적인 그룹을 말합니다. 영속성 컨텍스트는 엔티티 매니저(EntityManager)를 통해 사용되며, 엔티티의 영속성을 관리하는데 사용됩니다.

영속성 컨텍스트의 주요 특징과 역할은 다음과 같습니다:

엔티티의 관리: 영속성 컨텍스트는 JPA가 관리하는 엔티티들을 담고 있습니다. 이렇게 관리되는 엔티티들은 영속 상태(persistent)라고 합니다. 영속 상태의 엔티티는 데이터베이스에 저장되었거나, 데이터베이스로부터 조회된 상태를 나타냅니다.

1차 캐시: 영속성 컨텍스트는 엔티티들을 1차 캐시로 관리합니다. 이 1차 캐시는 엔티티의 식별자(ID)를 기준으로 엔티티를 저장하고, 같은 엔티티를 여러 번 조회하는 경우 캐시된 엔티티를 반환하여 성능을 향상시킵니다.

지연 로딩(Lazy Loading): 영속성 컨텍스트는 엔티티를 지연 로딩으로 관리합니다. 이는 연관된 엔티티를 실제로 사용할 때까지 데이터베이스에서 조회하지 않고, 필요할 때까지는 지연하여 조회하는 기능을 제공합니다.

트랜잭션 범위: 영속성 컨텍스트는 주로 트랜잭션 단위로 동작합니다. 즉, 하나의 트랜잭션에서 엔티티를 저장하거나 조회하면 해당 트랜잭션 범위 내에서 엔티티가 관리됩니다.

변경 감지(Dirty Checking): 영속성 컨텍스트는 엔티티의 변경 사항을 감지하고, 트랜잭션이 커밋되는 시점에 변경 사항을 데이터베이스에 자동으로 반영합니다. 이를 통해 개발자는 명시적으로 엔티티를 업데이트할 필요 없이, 엔티티의 필드 값을 변경하는 것만으로도 데이터베이스에 반영할 수 있습니다.

영속성 전이(Cascade): 영속성 컨텍스트는 연관된 엔티티들에 대해 영속성 전이(Cascade)를 제공합니다. 즉, 부모 엔티티가 저장, 수정, 삭제될 때 자식 엔티티들도 자동으로 저장, 수정, 삭제되도록 설정할 수 있습니다.

영속성 컨텍스트를 이용하면 개발자가 직접 데이터베이스와 상호작용할 필요 없이 객체지향적인 방식으로 엔티티를 다룰 수 있으며, JPA가 자동으로 데이터베이스와의 동기화를 처리합니다. 이를 통해 개발자는 비즈니스 로직에 집중할 수 있으며, 높은 생산성과 유지보수성을 얻을 수 있습니다.